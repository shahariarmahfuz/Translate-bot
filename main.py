import os
import requests
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, filters, CallbackContext
import random

# ржЯрзЗрж▓рж┐ржЧрзНрж░рж╛ржо ржмржЯ ржЯрзЛржХрзЗржи (ржПржЯрж┐ ржирж┐ржЬрзЗрж░ ржЯрзЛржХрзЗржи ржжрж┐рзЯрзЗ ржкрзНрж░рждрж┐рж╕рзНржерж╛ржкржи ржХрж░рзБржи)
TELEGRAM_BOT_TOKEN = "7305874644:AAEcpUBhpmmOrv0rE-0xTJsUSxsTmO5qZHw"

# Flask рж╕рж╛рж░рзНржнрж╛рж░рзЗрж░ URL (ржПржЯрж┐ ржирж┐ржЬрзЗрж░ рж╕рж╛рж░рзНржнрж╛рж░рзЗрж░ ржарж┐ржХрж╛ржирж╛ ржжрж┐ржи)
TRANSLATE_API_URL = "https://translate-vrv3.onrender.com/translate"

# ржХрж┐ржЫрзБ ржмрж╛ржВрж▓рж╛ рж╢ржмрзНржжрзЗрж░ рждрж╛рж▓рж┐ржХрж╛
BANGLA_WORDS = [
    "ржмржЗ", "ржЧрж╛ржЫ", "ржЖржХрж╛рж╢", "рж╕ржорзБржжрзНрж░", "ржмржирзНржзрзБ", "рж╕рзНржмржкрзНржи", "ржнрж╛рж▓рзЛржмрж╛рж╕рж╛", "ржЖрж▓рзЛ", "ржЬрж▓", "ржорзЗржШ"
]

# ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзАрж░ рждржерзНржп рж╕ржВрж░ржХрзНрж╖ржг
user_data = {}

async def start(update: Update, context: CallbackContext) -> None:
    """ ржпржЦржи ржЗржЙржЬрж╛рж░ /start ржХржорж╛ржирзНржб ржкрж╛ржарж╛ржмрзЗ, рждржЦржи рждрж╛ржХрзЗ ржПржХржЯрж┐ ржмрж╛ржВрж▓рж╛ рж╢ржмрзНржж ржжрзЗржУрзЯрж╛ рж╣ржмрзЗ """
    user_id = update.message.chat_id
    word = random.choice(BANGLA_WORDS)
    user_data[user_id] = word  # ржЗржЙржЬрж╛рж░рзЗрж░ ржЬржирзНржп рж╢ржмрзНржж рж╕ржВрж░ржХрзНрж╖ржг ржХрж░рж╛ рж╣рж▓рзЛ

    await update.message.reply_text(
        f"ЁЯФа ржЕржирзБржмрж╛ржж ржЪрзНржпрж╛рж▓рзЗржЮрзНржЬ! ржирж┐ржЪрзЗрж░ ржмрж╛ржВрж▓рж╛ рж╢ржмрзНржжржЯрж┐рж░ ржЗржВрж░рзЗржЬрж┐ рж▓рж┐ржЦрзБржи:\n**{word}**\n\nтЬНя╕П ржЙрждрзНрждрж░ ржжрж┐ржи:"
    )

async def handle_translation(update: Update, context: CallbackContext) -> None:
    """ ржЗржЙржЬрж╛рж░ ржпрзЗ ржЙрждрзНрждрж░ ржжрж┐ржмрзЗ рж╕рзЗржЯрж┐ API-рждрзЗ ржкрж╛ржарж┐рзЯрзЗ ржпрж╛ржЪрж╛ржЗ ржХрж░рж╛ рж╣ржмрзЗ """
    user_id = update.message.chat_id
    user_translation = update.message.text

    if user_id not in user_data:
        await update.message.reply_text("тЪая╕П ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ /start ржжрж┐рзЯрзЗ рж╢рзБрж░рзБ ржХрж░рзБржиред")
        return

    bangla_word = user_data[user_id]

    # API-рждрзЗ ржЕржирзБрж░рзЛржз ржкрж╛ржарж╛ржирзЛ
    params = {"ban": bangla_word, "eng": user_translation}
    response = requests.get(TRANSLATE_API_URL, params=params)

    if response.status_code == 200:
        result = response.json()

        if result["status"] == "correct":
            await update.message.reply_text(f"тЬЕ рж╕ржарж┐ржХ! ЁЯОЙ\n\nрж╕ржарж┐ржХ ржЕржирзБржмрж╛ржж: {result['correct_translation']}")
        else:
            errors = result["errors"]
            reason = result["why"]
            correction = result["correct_translation"]

            await update.message.reply_text(
                f"тЭМ ржнрзБрж▓ рж╣рзЯрзЗржЫрзЗ!\n\nЁЯФН **ржнрзБрж▓рзЗрж░ ржХрж╛рж░ржг:** {reason['incorrect_reason']}\n"
                f"ЁЯУМ **ржмрзНржпрж╛ржЦрзНржпрж╛:** {reason['correction_explanation']}\n\n"
                f"тЬЕ **рж╕ржарж┐ржХ ржЕржирзБржмрж╛ржж:** {correction}"
            )
    else:
        await update.message.reply_text("тЪая╕П ржЕржирзБржмрж╛ржж ржпрж╛ржЪрж╛ржЗ ржХрж░рждрзЗ рж╕ржорж╕рзНржпрж╛ рж╣ржЪрзНржЫрзЗред ржкрж░рзЗ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржиред")

async def help_command(update: Update, context: CallbackContext) -> None:
    """ ржЗржЙржЬрж╛рж░ ржпржжрж┐ /help ржХржорж╛ржирзНржб ржжрзЗрзЯ, рждрж╛ржХрзЗ ржирж┐рж░рзНржжрзЗрж╢ржирж╛ ржжрзЗржУрзЯрж╛ рж╣ржмрзЗ """
    await update.message.reply_text(
        "ЁЯУЦ **ржмрзНржпржмрж╣рж╛рж░рзЗрж░ ржирж┐рзЯржо:**\n"
        "1я╕ПтГг /start ржжрж┐ржи, ржЖржорж░рж╛ ржЖржкржирж╛ржХрзЗ ржПржХржЯрж┐ ржмрж╛ржВрж▓рж╛ рж╢ржмрзНржж ржжрзЗржмрзЛред\n"
        "2я╕ПтГг ржЖржкржирж┐ ржПрж░ ржЗржВрж░рзЗржЬрж┐ ржЕржирзБржмрж╛ржж рж▓рж┐ржЦрзБржиред\n"
        "3я╕ПтГг ржЖржорж░рж╛ ржпрж╛ржЪрж╛ржЗ ржХрж░рзЗ ржмрж▓ржм рж╕ржарж┐ржХ ржирж╛ржХрж┐ ржнрзБрж▓!\n\n"
        "тЬЕ рж╕ржарж┐ржХ рж╣рж▓рзЗ ржЖржкржирж┐ ржЬрж┐рждрзЗ ржпрж╛ржмрзЗржи ЁЯОЙ\n"
        "тЭМ ржнрзБрж▓ рж╣рж▓рзЗ ржЖржорж░рж╛ ржнрзБрж▓ржЯрж┐ рж╕ржВрж╢рзЛржзржи ржХрж░рзЗ ржжрзЗржЦрж╛ржмрзЛред\n"
        "ЁЯЪА рж╢рж┐ржЦрзБржи ржПржмржВ ржЙржирзНржирждрж┐ ржХрж░рзБржи!"
    )

def main():
    """ ржкрзНрж░ржзрж╛ржи ржлрж╛ржВрж╢ржи ржпрзЗржЦрж╛ржирзЗ ржмржЯ ржЪрж╛рж▓рж╛ржирзЛ рж╣ржмрзЗ """
    app = Application.builder().token(TELEGRAM_BOT_TOKEN).build()

    # ржХржорж╛ржирзНржб рж╣рзНржпрж╛ржирзНржбрж▓рж╛рж░
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("help", help_command))

    # ржорзЗрж╕рзЗржЬ рж╣рзНржпрж╛ржирзНржбрж▓рж╛рж░ (ржЗржЙржЬрж╛рж░ ржпрзЗ ржорзЗрж╕рзЗржЬ ржкрж╛ржарж╛ржмрзЗ рж╕рзЗржЯрж┐ рж╣рзНржпрж╛ржирзНржбрж▓ ржХрж░ржмрзЗ)
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_translation))

    # ржмржЯ ржЪрж╛рж▓рзБ ржХрж░рзБржи
    print("ЁЯдЦ Bot is running...")
    app.run_polling()

if __name__ == "__main__":
    main()
